# https://wiki.archlinux.org/index.php/Sysctl
# https://docs.continuent.com/continuent-tungsten-2.0/performance-networking.html
# https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt


# Increase system file descriptor limit so we will (probably)
# never run out under lots of concurrent requests.
# (Per-process limit is set in /etc/security/limits.conf)
fs.file-max = 5000000

# Increase the socket listening backlog.
# Increase number of incoming connections 
# somaxconn defines the number of request_sock structures 
# allocated per each listen call. The
# queue is persistent through the life of the listen socket
net.core.somaxconn = 65535

# Increase backlog for UNIX sockets.
#net.unix.max_dgram_qlen = 100

# Maximum backlogs.
# Increase number of incoming connections backlog queue 
# Sets the maximum number of packets, queued on the INPUT 
# side, when the interface receives packets faster than
# kernel can process them. 
net.core.netdev_max_backlog = 400000

net.ipv4.ip_local_port_range = 4096 65535

#maximum queue length of pending connections 'Waiting Acknowledgment'.
net.ipv4.tcp_max_syn_backlog = 65536


# Increase number of incoming connections backlog queue 
# Sets the maximum number of packets, queued on the INPUT 
# side, when the interface receives packets faster than
# kernel can process them. 
net.ipv4.tcp_max_orphans = 262144

# Increase TCP max buffer size setable using setsockopt() 16 MB with
# a few parallel streams is recommended for most 10G paths 32 MB
# might be needed for some very long end-to-end 10G or 40G paths.
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

# Increase Linux autotuning TCP buffer limits min, default, and max
# number of bytes to use (only change the 3rd value, and make it 16
# MB or more).
net.core.rmem_default = 10000000
net.core.wmem_default = 10000000
net.ipv4.tcp_mem = 30000000 30000000 30000000
net.ipv4.tcp_rmem = 30000000 30000000 30000000
net.ipv4.tcp_wmem = 30000000 30000000 30000000

# More TCP stack stuff.
# net.ipv4.tcp_mem = 50576 64768 98152

# Decrease the time default value for tcp_fin_timeout connection 
net.ipv4.tcp_fin_timeout = 10

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks 
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 0

# Enable select acknowledgments:
net.ipv4.tcp_sack = 1

# Only valid when the kernel was compiled with CONFIG_SYN_COOKIES
# Send out syncookies when the syn backlog queue of a socket
# overflows. This is to prevent against the common 'SYN flood attack'
net.ipv4.tcp_syncookies = 1

# TCP timestamps protect against wrapping sequence numbers (at gigabit speeds) and round trip time calculation implemented in TCP.
# Disabling timestamp generation will reduce spikes and may give a performance boost on gigabit networks:
net.ipv4.tcp_timestamps = 1

# Sets the kernels reverse path filtering mechanism to value 1 (on). 
# Will do source validation of the packet's received from all the interfaces on the machine. 
# Protects from attackers that are using ip spoofing methods to do harm (default):
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# The congestion control algorithm used
net.ipv4.tcp_congestion_control = bic

# not supporting routers to signal congestion before having to drop packets.
net.ipv4.tcp_ecn = 0

# Maximal number of timewait sockets held by system simultaneously
net.ipv4.tcp_max_tw_buckets = 2000000

# TCP timeout, was added after explination about elastic search and issues with GCE 10 minute silent socket close. Might apply to other apps and hosting..
# http://blog.trifork.com/2015/04/08/dealing-with-nodenotavailableexceptions-in-elasticsearch/
# Note: All instances are configured with a "hidden" firewall rule that drops TCP connections after 10 minutes of inactivity.
# If this timeout causes connectivity errors to or from your instance, you should configure TCP keep-alives to prevent connections from being dropped.
# See the tips and troubleshooting page for details. -- https://cloud.google.com/compute/docs/networking
net.ipv4.tcp_keepalive_time = 10
net.ipv4.tcp_keepalive_intvl = 10
net.ipv4.tcp_keepalive_probes = 3


# Connection tracking limits
# sysctl net.netfilter.nf_conntrack_count
# hashsize = nf_conntrack_max / 8
# echo 16384 > /sys/module/nf_conntrack/parameters/hashsize
net.netfilter.nf_conntrack_max=131072


# vi: ft=sysctl
