{% set this_node = stellar_core.nodes|selectattr("name", "equalto", inventory_hostname)|first %}

#!/usr/bin/env bash

echo "-------------------------"
echo "erasing local buckets..."
echo "-------------------------"
rm /opt/stellar-core/volumes/stellar-core/buckets -rf
exit_status=$?
if [ $exit_status -ne 0 ]; then
    echo "failed to erase local buckets."
    exit $exit_status
fi

echo "-------------------------"
echo "erasing core db..."
echo "-------------------------"
docker-compose run --rm stellar-core --newdb
exit_status=$?
if [ $exit_status -ne 0 ]; then
    echo "failed to erase db. bailing."
    exit $exit_status
fi

echo "-------------------------"
echo "erasing s3 bucket"
echo "-------------------------"
aws s3 rm {{this_node.archive.put_address}} --recursive
exit_status=$?
if [ $exit_status -ne 0 ]; then
    echo "failed to erase s3 bucket"
    exit $exit_status
fi


echo "-------------------------"
echo "erasing history bucket..."
echo "-------------------------"
docker-compose run --rm stellar-core --newhist my-bucket
exit_status=$?
if [ $exit_status -ne 0 ]; then
    echo "failed to erase bucket. bailing."
    exit $exit_status
fi


echo "-----------------------------------------------"
read -r -p "Want to force SCP? [y/N] " response
echo "-----------------------------------------------"
case "$response" in
    [yY][eE][sS]|[yY])
    echo "-------------------------"
    echo "setting force scp flag..."
    echo "-------------------------"
    docker-compose run --rm stellar-core --forcescp
    ;;
    *)
    ;;
esac

echo "-----------------------------------------------"
read -r -p "Are you sure you want to start the core? [y/N] " response
echo "-----------------------------------------------"
case "$response" in
    [yY][eE][sS]|[yY])
    echo "----------------"
    echo "starting core..."
    echo "----------------"
    docker-compose down;docker-compose up -d

    exit_status=$?
    if [ $exit_status -ne 0 ]; then
        echo "failed to start core. bailing."
        exit $exit_status
    else
        echo "waiting 10 seconds..."
        sleep 10
        echo "sending command to set protocol version, max-tx-size and base-resereve"
        curl 'http://localhost:11626/upgrades?mode=set&upgradetime=1970-01-01T00:00:00Z&basereserve=0&maxtxsize=500&protocolversion=9'

        echo "docker ps output:"
        docker ps
    fi
        ;;
    *)
        echo "ok. bye now!"
        exit
        ;;
esac
