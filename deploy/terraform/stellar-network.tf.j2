{%for node in stellar.nodes%}

{%set module_name = 'stellar-core-{}-{}'.format(stellar.network_name, node.zone)%}

module "{{module_name}}" {
  source = "modules/stellar-core"
  providers = {
    "aws" = "aws.{{node.region}}"
  }

  ssh_public_key_name= "${aws_key_pair.{{node.region}}.key_name}"

  stellar_network_name = "{{stellar.network_name}}"
  tld                  = "{{stellar.tld}}"
  zone                 = "{{node.zone}}"
  instance_type        = "{{stellar.instance_type}}"

  rds_password         = "{{env_vars['RDS_PASSWORD']}}"
}

output "route53-{{module_name}}" {
  description = "Route53 FQDN name assigned to the EC2 instance"
  value       = "${module.{{module_name}}.route53}"
}

output "s3-{{module_name}}" {
  description = "S3 bucket name"
  value       = "${module.{{module_name}}.s3}"
}

output "rds-{{module_name}}" {
  description = "RDS address"
  value       = "${module.{{module_name}}.rds}"
}

output "horizon_route53-{{module_name}}" {
  description = "Route53 FQDN name assigned to the EC2 instance"
  value       = "${module.{{module_name}}.horizon_route53}"
}

output "horizon_ec2-{{module_name}}" {
  description = "EC2 public DNS name"
  value       = "${module.{{module_name}}.horizon_ec2}"
}

output "horizon_rds-{{module_name}}" {
  description = "RDS address"
  value       = "${module.{{module_name}}.horizon_rds}"
}

{%endfor%}

{# define one provider + create one ssh key per region #}
{%for region in stellar.nodes|map(attribute="region")|unique%}
provider "aws" {
  alias = "{{region}}"

  access_key = "{{env_vars['AWS_ACCESS_KEY']}}"
  secret_key = "{{env_vars['AWS_SECRET_KEY']}}"
  region     = "{{region}}"
}

resource "aws_key_pair" "{{region}}" {
  provider = "aws.{{region}}"

  key_name   = "${local.ssh_public_key_name}"
  public_key = "{{env_vars['SSH_PUBLIC_KEY']}}"
}
{%endfor%}


locals {
  # ssh key to create for accessing ec2 instances
  ssh_public_key_name = "stellar-core-{{stellar.network_name}}"
}

{#
# vi: ft=terraform.jinja2
#}
